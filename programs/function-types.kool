// This program tests the subtyping of function types

class A {
  void A() {}
}

class B extends A {
  void B() {}
}

class C extends B {
  void C() {}
  A AA(A a) {}
  A->A getAA() {
    return AA;
  }
  B AB(A a) {}
  A->B getAB() {
    return AB;
  }
  C AC(A a) {}
  A->C getAC() {
    return AC;
  }
  A BA(B b) {}
  B->A getBA() {
    return BA;
  }
  B BB(B b) {}
  B->B getBB() {
    return BB;
  }
  C BC(B b) {}
  B->C getBC() {
    return BC;
  }
  A CA(C c) {}
  C->A getCA() {
    return CA;
  }
  B CB(C c) {}
  C->B getCB() {
    return CB;
  }
  C CC(C c) {}
  C->C getCC() {
    return CC;
  }
}

class Main extends C {
  void Main() {
  C c = new C();
  A->A aa = c.getAA();
  A->B ab = c.getAB();
  A->C ac = c.getAC();
  B->A ba = c.getBA();
  B->B bb = c.getBB();
  B->C bc = c.getBC();
  C->A ca = c.getCA();
  C->B cb = c.getCB();
  C->C cc = c.getCC();
  ca = ba = aa = ab = ac; // OK: C->A > B->A > A->A > A->B > A->C
  ca = cb = cc = bc = ac; // OK: C->A > C->B > C->C > B->C > A->C
  ba = bb = ab;           // OK: B->A > B->B > A->B
  cb = bb = bc;           // OK: C->B > B->B > B->C
  print("OK\n");
//  ac = bc;  print("Wrong! A->C < B->C\n");
//  bb = cc;  print("Wrong! Incompatible types.\n");
  print("Done\n");
  }
}
